}
plotReport(df=result0,metricsName=as.character(metricsName), filename=paste(metricsName,dim(result1[result1$d>2,])[1]/20,"png",sep="."))
Object5=mime_part("alert-*",name="merchCtr.png")
Email_Att<-list(Email,Object5)
Email<-"Here are some sample alerts, nullrate.png will not be alerted by our system, the other three will triger alert"
Object5
Object4
Object1=mime_part("merchCtr.png",name="merchCtr.png")
Object1
sendmail(from = "<yzhao5@ebay.com>",
to = "<yzhao5@ebay.com>",
subject = paste("Alerts on PHD metrics from Joe's email",sep=" "),
#           body = "<html><img src=\"merchCtr.png\"><br/><img src=\"GXOSucc.png\"></html>",
html = TRUE,
inline=TRUE,
control=list(smtpServer="atom.corp.ebay.com"),
#           at = c("merchCtr.png", "GXOSucc.png"),
msg=Email_Att,
authenticate = TRUE,
send = TRUE)
Email_Att<-list(Email,Object5)
sendmail(from = "<yzhao5@ebay.com>",
to = "<yzhao5@ebay.com>",
subject = paste("Alerts on PHD metrics from Joe's email",sep=" "),
#           body = "<html><img src=\"merchCtr.png\"><br/><img src=\"GXOSucc.png\"></html>",
html = TRUE,
inline=TRUE,
control=list(smtpServer="atom.corp.ebay.com"),
#           at = c("merchCtr.png", "GXOSucc.png"),
msg=Email_Att,
authenticate = TRUE,
send = TRUE)
alertCount=list.files
alertCount
alertCount=list.files()
alertCount
?list.files
alertCount=list.files(pattern = "alert-*")
alertCount
#set parameters
dayback=30
#for turboXo
# result0=madValid(turboXo[((30-dayback+1):30),],2)
result0=head(turboXo,n=1)
result0=result0[-1,]
for(i in (dim(turboXo)[1]-30):dim(turboXo)[1]){
#        alertData = subset(allData,allData$metric_name=="Buying/Search-SRP Null Rate_US_Mobile_Core Sites")
alertData = turboXo[((i-dayback+1):i),]
result = madValid(alertData,2)
result0=rbind(result0,result)
}
result1=tail(result0,n=14)
if(dim(result1[result1$d>2,])[1]/20 >0.1){
metricsName="alert-turboXo"
}else{
metricsName="nonalert-turboXo"
}
plotReport(df=result0,metricsName=as.character(metricsName), filename=paste(metricsName,dim(result1[result1$d>2,])[1]/20,"png",sep="."))
#for GXO success rate
result0=head(merchCtr,n=1)
result0=result0[-1,]
for(i in (dim(GXOSucc)[1]-30):dim(GXOSucc)[1]){
alertData = GXOSucc[((i-dayback+1):i),]
result = madValid(alertData,2)
result0=rbind(result0,result)
}
result1=tail(result0,n=14)
if(dim(result1[result1$d>2,])[1]/20 >0.1){
metricsName="alert-GXOSucc"
}else{
metricsName="nonalert-GXOSucc"
}
plotReport(df=result0,metricsName=as.character(metricsName), filename=paste(metricsName,dim(result1[result1$d>2,])[1]/20,"png",sep="."))
#for VI merch CTR
result0=head(merchCtr,n=1)
result0=result0[-1,]
for(i in (dim(merchCtr)[1]-30):dim(merchCtr)[1]){
alertData = merchCtr[((i-dayback+1):i),]
result = madValid(alertData,2)
result0=rbind(result0,result)
}
result1=tail(result0,n=14)
if(dim(result1[result1$d>2,])[1]/20 >0.1){
metricsName="alert-merchCtr"
}else{
metricsName="nonalert-merchCtr"
}
plotReport(df=result0,metricsName=as.character(metricsName), filename=paste(metricsName,dim(result1[result1$d>2,])[1]/20,"png",sep="."))
#for nullrate
result0=head(nullrate,n=1)
result0=result0[-1,]
for(i in (dim(nullrate)[1]-30):dim(nullrate)[1]){
alertData = nullrate[((i-dayback+1):i),]
result = madValid(alertData,2)
result0=rbind(result0,result)
}
result1=tail(result0,n=14)
if(dim(result1[result1$d>2,])[1]/20 >0.1){
metricsName="alert-nullrate"
}else{
metricsName="nonalert-nullrate"
}
plotReport(df=result0,metricsName=as.character(metricsName), filename=paste(metricsName,dim(result1[result1$d>2,])[1]/20,"png",sep="."))
alertCount=list.files(pattern = "alert-*")
alertCount
set parameters
dayback=30
#for turboXo
# result0=madValid(turboXo[((30-dayback+1):30),],2)
result0=head(turboXo,n=1)
result0=result0[-1,]
for(i in (dim(turboXo)[1]-30):dim(turboXo)[1]){
#        alertData = subset(allData,allData$metric_name=="Buying/Search-SRP Null Rate_US_Mobile_Core Sites")
alertData = turboXo[((i-dayback+1):i),]
result = madValid(alertData,2)
result0=rbind(result0,result)
}
result1=tail(result0,n=14)
if(dim(result1[result1$d>2,])[1]/20 >0.1){
metricsName="Alert-turboXo"
}else{
metricsName="nonalert-turboXo"
}
plotReport(df=result0,metricsName=as.character(metricsName), filename=paste(metricsName,dim(result1[result1$d>2,])[1]/20,"png",sep="."))
#for GXO success rate
result0=head(merchCtr,n=1)
result0=result0[-1,]
for(i in (dim(GXOSucc)[1]-30):dim(GXOSucc)[1]){
alertData = GXOSucc[((i-dayback+1):i),]
result = madValid(alertData,2)
result0=rbind(result0,result)
}
result1=tail(result0,n=14)
if(dim(result1[result1$d>2,])[1]/20 >0.1){
metricsName="Alert-GXOSucc"
}else{
metricsName="nonalert-GXOSucc"
}
plotReport(df=result0,metricsName=as.character(metricsName), filename=paste(metricsName,dim(result1[result1$d>2,])[1]/20,"png",sep="."))
#for VI merch CTR
result0=head(merchCtr,n=1)
result0=result0[-1,]
for(i in (dim(merchCtr)[1]-30):dim(merchCtr)[1]){
alertData = merchCtr[((i-dayback+1):i),]
result = madValid(alertData,2)
result0=rbind(result0,result)
}
result1=tail(result0,n=14)
if(dim(result1[result1$d>2,])[1]/20 >0.1){
metricsName="Alert-merchCtr"
}else{
metricsName="nonalert-merchCtr"
}
plotReport(df=result0,metricsName=as.character(metricsName), filename=paste(metricsName,dim(result1[result1$d>2,])[1]/20,"png",sep="."))
#for nullrate
result0=head(nullrate,n=1)
result0=result0[-1,]
for(i in (dim(nullrate)[1]-30):dim(nullrate)[1]){
alertData = nullrate[((i-dayback+1):i),]
result = madValid(alertData,2)
result0=rbind(result0,result)
}
result1=tail(result0,n=14)
if(dim(result1[result1$d>2,])[1]/20 >0.1){
metricsName="Alert-nullrate"
}else{
metricsName="nonalert-nullrate"
}
plotReport(df=result0,metricsName=as.character(metricsName), filename=paste(metricsName,dim(result1[result1$d>2,])[1]/20,"png",sep="."))
#set parameters
dayback=30
#for turboXo
# result0=madValid(turboXo[((30-dayback+1):30),],2)
result0=head(turboXo,n=1)
result0=result0[-1,]
for(i in (dim(turboXo)[1]-30):dim(turboXo)[1]){
#        alertData = subset(allData,allData$metric_name=="Buying/Search-SRP Null Rate_US_Mobile_Core Sites")
alertData = turboXo[((i-dayback+1):i),]
result = madValid(alertData,2)
result0=rbind(result0,result)
}
result1=tail(result0,n=14)
if(dim(result1[result1$d>2,])[1]/20 >0.1){
metricsName="alert-turboXo"
}else{
metricsName="not-turboXo"
}
plotReport(df=result0,metricsName=as.character(metricsName), filename=paste(metricsName,dim(result1[result1$d>2,])[1]/20,"png",sep="."))
#for GXO success rate
result0=head(merchCtr,n=1)
result0=result0[-1,]
for(i in (dim(GXOSucc)[1]-30):dim(GXOSucc)[1]){
alertData = GXOSucc[((i-dayback+1):i),]
result = madValid(alertData,2)
result0=rbind(result0,result)
}
result1=tail(result0,n=14)
if(dim(result1[result1$d>2,])[1]/20 >0.1){
metricsName="alert-GXOSucc"
}else{
metricsName="not-GXOSucc"
}
plotReport(df=result0,metricsName=as.character(metricsName), filename=paste(metricsName,dim(result1[result1$d>2,])[1]/20,"png",sep="."))
#for VI merch CTR
result0=head(merchCtr,n=1)
result0=result0[-1,]
for(i in (dim(merchCtr)[1]-30):dim(merchCtr)[1]){
alertData = merchCtr[((i-dayback+1):i),]
result = madValid(alertData,2)
result0=rbind(result0,result)
}
result1=tail(result0,n=14)
if(dim(result1[result1$d>2,])[1]/20 >0.1){
metricsName="alert-merchCtr"
}else{
metricsName="not-merchCtr"
}
plotReport(df=result0,metricsName=as.character(metricsName), filename=paste(metricsName,dim(result1[result1$d>2,])[1]/20,"png",sep="."))
#for nullrate
result0=head(nullrate,n=1)
result0=result0[-1,]
for(i in (dim(nullrate)[1]-30):dim(nullrate)[1]){
alertData = nullrate[((i-dayback+1):i),]
result = madValid(alertData,2)
result0=rbind(result0,result)
}
result1=tail(result0,n=14)
if(dim(result1[result1$d>2,])[1]/20 >0.1){
metricsName="alert-nullrate"
}else{
metricsName="not-nullrate"
}
plotReport(df=result0,metricsName=as.character(metricsName), filename=paste(metricsName,dim(result1[result1$d>2,])[1]/20,"png",sep="."))
alertCount=list.files(pattern = "alert-*")
alertCount
alertCount=length(list.files(pattern = "alert-*"))
list=as.list(list.files(pattern = "alert-*"))
list
Email_Att<-list(Email,unlist(list))
Email_Att
list=c(Email,list.files(pattern = "alert-*"))
list
list=as.list(c(Email,list.files(pattern = "alert-*")))
list
Object1=mime_part("merchCtr.png",name="merchCtr.png")
Object2=mime_part("GXOSucc.png",name="GXOSucc.png")
Object3=mime_part("turboXo.png",name="turboXo.png")
Object4=mime_part("nullrate.png",name="nullrate.png")
Email_Att<-list(Email,Object1,Object2,Object3,Object4)
Email_Att
alert=list.files(pattern = "alert-*")
alert
?sapply
sapply(alert,function(r){paste('mime_part(\"',r,'\",name=\"',r,'\")')})
sapply(alert,function(r){paste('mime_part(\"',r,'\",name=\"',r,'\")',sep="")})
sapply(alert,function(r){paste('mime_part("',r,'",name="',r,'")',sep="")})
a=sapply(alert,function(r){paste('mime_part("',r,'",name="',r,'")',sep="")})
a
sapply(a,function(r){parse(r)})
a=sapply(alert,function(r){paste("mime_part(\"",r,"\",name=\"",r,"\")",sep="")})
sapply(a,function(r){parse(r)})
a
?do.call
a=sapply(alert,function(r){mime_part(r),name=r})
alert
a=sapply(alert,function(r){mime_part(as.character(r)),name=r})
a=sapply(alert,function(r){mime_part(r,name=r)})
a
list=as.list(c(Email,a))
list
Email_Att
Email<-"Here are some sample alerts, nullrate.png will not be alerted by our system, the other three will triger alert"
alert=list.files(pattern = "alert-*")
a=sapply(alert,function(r){mime_part(r,name=r)})
Email_Att=as.list(c(Email,a))
sendmail(from = "<yzhao5@ebay.com>",
to = "<yzhao5@ebay.com>",
subject = paste("Alerts on PHD metrics from Joe's email",sep=" "),
#           body = "<html><img src=\"merchCtr.png\"><br/><img src=\"GXOSucc.png\"></html>",
html = TRUE,
inline=TRUE,
control=list(smtpServer="atom.corp.ebay.com"),
#           at = c("merchCtr.png", "GXOSucc.png"),
msg=Email_Att,
authenticate = TRUE,
send = TRUE)
rm(list=ls())
rm(list=ls())
load("phd.RData")
library(plyr)
library(TTR)
library(ggplot2)
library(forecast)
library(sendmailR)
df=data
#change data types
df$session_start_dt=as.Date(df$session_start_dt)
#get metrics and time period I want
#use 10-11 to 10-25 as test period, use 30 days data 9-11 to 10-11 as training data
df=df[(df$session_start_dt>="2014-08-01")&(df$session_start_dt<="2014-10-25"),]
#get metrics and filters on data:
#metric1: GXO success rate
mobileDE=df[(df$Device=="Mobile")&(df$site=="DE")&(df$EXPRNC_LVL_2_DESC=="Core Sites"),]
GXOSucc=ddply(mobileDE,.(session_start_dt),summarize,GXOSuccRate=sum(succ_cnt)/sum(RYP))
GXOSucc$Dvalue= DEMA(GXOSucc$GXOSuccRate, n = 10, v = 1, wilder = FALSE, ratio = NULL)
GXOSucc=GXOSucc[!is.na(GXOSucc$Dvalue),]
#metric2: turbo XO rate
fsom=df[(df$Device=="Mobile")&(df$site=="US")&(df$EXPRNC_LVL_2_DESC=="Core Sites"),]
turboXo=ddply(fsom,.(session_start_dt),summarize,turboXo=sum(TURBO_trans_cnt)/sum(trans_cnt))
turboXo$Dvalue= DEMA(turboXo$turboXo, n = 10, v = 1, wilder = FALSE, ratio = NULL)
turboXo=turboXo[!is.na(turboXo$Dvalue),]
#metric3: VI merch CTR
fsom=df[(df$Device=="PC")|(df$Device=="Mobile")&(df$site=="US")&(df$EXPRNC_LVL_2_DESC=="Core Sites"),]
merchCtr=ddply(fsom,.(session_start_dt),summarize,merchCtr=sum(vi_clicks)/sum(vi_surface_imp_cnt))
merchCtr$Dvalue= DEMA(merchCtr$merchCtr, n = 10, v = 1, wilder = FALSE, ratio = NULL)
merchCtr=merchCtr[!is.na(merchCtr$Dvalue),]
# metric4: sign in success rate
fsom=df[(df$Device=="Mobile")&(df$site=="US")&(df$EXPRNC_LVL_2_DESC=="Core Sites"),]
nullrate=ddply(fsom,.(session_start_dt),summarize,
nullrate=sum(null_SRP_1pct)/sum(SRP_cnt_1pct)
)
nullrate$Dvalue= DEMA(nullrate$nullrate, n = 10, v = 1, wilder = FALSE, ratio = NULL)
nullrate=nullrate[!is.na(nullrate$Dvalue),]
#Now metrics is ready, each is DEMA on 10 values,
#each has 37 observations, we will predict the last 14 points and plot last 30 points
#functions
madValid<-function(df, threshold){
date = df$session_start_dt[nrow(df)]  # get the last date (order by date while get data)
print('**********************')
print(date)
values = df$Dvalue  # get all metric value
#    values = df$rawmetricvalue # get all metric value
value = values[length(values)] # get the last metric value according to the list
values = values[-length(values)]  # get all metric value except for last
values = values[-which(values == max(values))[1]]   # which, return index , remove the max value
values = values[-which(values == min(values))[1]]   # remove the min value
med = median(values)
md = mad(values)
minV = min(values)
d = abs(value - med) / md
lower = med - threshold * md
upper = med + threshold * md
##if lower <0, then customize it
#print(lower)
if(!is.na(lower)){
if (lower<0)
{
lower = minV
}
}
result = data.frame(value, lower, upper, med, md, d, date)
return(result)
}
#plot
plotReport<-function(df, metricsName, filename) {
png(filename, width=400,height=300)
#png(filename, width=400,height=300)
plot <- ggplot(data=df , aes(x=date, y=value)) + geom_line(color="blue")
plot = plot + geom_line(aes(y=upper), color="red",linetype="dotted")
plot = plot + geom_line(aes(y=lower), color="red",linetype="dotted")
plot = plot + labs(title=paste(metricsName)) + theme(axis.title.x = element_blank()) + theme(axis.title.y = element_blank())
print(plot);
dev.off();
}
#set parameters
dayback=30
#for turboXo
# result0=madValid(turboXo[((30-dayback+1):30),],2)
result0=head(turboXo,n=1)
result0=result0[-1,]
for(i in (dim(turboXo)[1]-30):dim(turboXo)[1]){
#        alertData = subset(allData,allData$metric_name=="Buying/Search-SRP Null Rate_US_Mobile_Core Sites")
alertData = turboXo[((i-dayback+1):i),]
result = madValid(alertData,2)
result0=rbind(result0,result)
}
result1=tail(result0,n=14)
if(dim(result1[result1$d>2,])[1]/20 >0.1){
metricsName="alert-turboXo"
}else{
metricsName="not-turboXo"
}
plotReport(df=result0,metricsName=as.character(metricsName), filename=paste(metricsName,dim(result1[result1$d>2,])[1]/20,"png",sep="."))
#for GXO success rate
result0=head(merchCtr,n=1)
result0=result0[-1,]
for(i in (dim(GXOSucc)[1]-30):dim(GXOSucc)[1]){
alertData = GXOSucc[((i-dayback+1):i),]
result = madValid(alertData,2)
result0=rbind(result0,result)
}
result1=tail(result0,n=14)
if(dim(result1[result1$d>2,])[1]/20 >0.1){
metricsName="alert-GXOSucc"
}else{
metricsName="not-GXOSucc"
}
plotReport(df=result0,metricsName=as.character(metricsName), filename=paste(metricsName,dim(result1[result1$d>2,])[1]/20,"png",sep="."))
#for VI merch CTR
result0=head(merchCtr,n=1)
result0=result0[-1,]
for(i in (dim(merchCtr)[1]-30):dim(merchCtr)[1]){
alertData = merchCtr[((i-dayback+1):i),]
result = madValid(alertData,2)
result0=rbind(result0,result)
}
result1=tail(result0,n=14)
if(dim(result1[result1$d>2,])[1]/20 >0.1){
metricsName="alert-merchCtr"
}else{
metricsName="not-merchCtr"
}
plotReport(df=result0,metricsName=as.character(metricsName), filename=paste(metricsName,dim(result1[result1$d>2,])[1]/20,"png",sep="."))
#for nullrate
result0=head(nullrate,n=1)
result0=result0[-1,]
for(i in (dim(nullrate)[1]-30):dim(nullrate)[1]){
alertData = nullrate[((i-dayback+1):i),]
result = madValid(alertData,2)
result0=rbind(result0,result)
}
result1=tail(result0,n=14)
if(dim(result1[result1$d>2,])[1]/20 >0.1){
metricsName="alert-nullrate"
}else{
metricsName="not-nullrate"
}
plotReport(df=result0,metricsName=as.character(metricsName), filename=paste(metricsName,dim(result1[result1$d>2,])[1]/20,"png",sep="."))
#send email using R
Email<-"We only send out alert metrics by algorithm, you can tell how severe the alert is by taking a look at the last fraction in the plot name.
In the plot, red dotted line is the confidence interval of the metric, if one value is beyond the red dotted line, it is suspicious to be an alert.
If the alerted point exceeds our threashold, it will trigger out alert system and we will send out those metrics weekly"
alert=list.files(pattern = "alert-*")
a=sapply(alert,function(r){mime_part(r,name=r)})
Email_Att=as.list(c(Email,a))
#only send alert metrics
sendmail(from = "<yzhao5@ebay.com>",
to = "<yzhao5@ebay.com>",
subject = paste("Alerts on PHD metrics from Joe's email",sep=" "),
#           body = "<html><img src=\"merchCtr.png\"><br/><img src=\"GXOSucc.png\"></html>",
html = TRUE,
inline=TRUE,
control=list(smtpServer="atom.corp.ebay.com"),
#           at = c("merchCtr.png", "GXOSucc.png"),
msg=Email_Att,
authenticate = TRUE,
send = TRUE)
fsom=df[(df$Device=="Mobile")&(df$site=="US")&(df$EXPRNC_LVL_2_DESC=="Core Sites"),]
cartshare=ddply(fsom,.(session_start_dt),summarize,
cartshare=sum(CART_trans_cnt)/sum(trans_cnt)
)
cartshare
cartshare$Dvalue= DEMA(cartshare$cartshare, n = 10, v = 1, wilder = FALSE, ratio = NULL)
plot(cartshare)
plot(cartshare$session_start_dt,cartshare$Dvalue,type="l")
dayback=30
#for turboXo
# result0=madValid(turboXo[((30-dayback+1):30),],2)
result0=head(cartshare,n=1)
result0=result0[-1,]
for(i in (dim(cartshare)[1]-20):dim(cartshare)[1]){
#        alertData = subset(allData,allData$metric_name=="Buying/Search-SRP Null Rate_US_Mobile_Core Sites")
alertData = cartshare[((i-dayback+1):i),]
result = madValid(alertData,2)
result0=rbind(result0,result)
}
plotReport(df=result0,metricsName="cartshare", "cartshare.png")
302*0.99
301/3
302*0.99
?svd
hilbert <- function(n) { i <- 1:n; 1 / outer(i - 1, i, "+") }
X <- hilbert(9)[, 1:6]
X
svd(X)
hilbert
hilbert(9)
Y=hilbert(9)[1:6,]
svd(Y)
Y
data=c(1,2,3,4,5,6,7,8,9,10)
SMA(data,7)
??SMA
library(TTR)
SMA(data,7)
10+9+8+7+6+5+4
49/7
3+9+8+7+6+5+4
42/7
library(devtools)
#roxygen2 is for latex formating
library(roxygen2)
#testthat package is for test cases
library(testthat)
#create a skeleton of R pacakge and then set work directory to it
setwd("C:/Users/yzhao5/Desktop/packages/")
create("alert20")
setwd("alert20/")
#modify DESCRIPTION file
file.edit('DESCRIPTION')
load_all()
#document() function will generate .RD files automatically for comments of the functions
document()
#build() function will build functions and do checkings
build()
load_all()
#document() function will generate .RD files automatically for comments of the functions
document()
#build() function will build functions and do checkings
build()
ls
ls()
